{"version":3,"sources":["components/NavBar.js","components/Card.js","components/FormTodo.js","components/Statistic.js","components/Statistics.js","components/ItemTodo.js","components/ListTodos.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","href","Assignment_default","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","rel","target","Card","children","FormTodo","state","textValue","submitHandler","e","preventDefault","description","_this","trim","length","swal","onSubmit","Date","now","done","setState","handleChange","value","render","onChange","placeholder","Button_default","variant","color","Add_default","React","Component","Statistic","bg","text","OutlinedFlag_default","style","fontSize","DoneAll_default","Update_default","number","Statistics","allTodos","todos","doneTodos","filter","todo","notDone","ItemTodo","onClick","toggleDone","checked","textDecoration","htmlFor","IconButton_default","deleteTodo","Delete_default","ListTodos","map","components_ItemTodo","key","App","addTodo","concat","Object","toConsumableArray","objectSpread","Fragment","components_FormTodo","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab67c2be.chunk.js","sourcesContent":["import React from \"react\"\r\nimport AssignmentICon from '@material-ui/icons/Assignment'\r\n\r\nexport default props =>\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark-blue shadow mb-3 p-3\">\r\n    <div className=\"container\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        <AssignmentICon>AssignmentICon</AssignmentICon> Todo list\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"> </span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <a className=\"nav-item nav-link\" rel=\"noopener noreferrer\" target=\"_blank\"\r\n             href=\"https://github.com/HackYourFuture-CPH/React/blob/master/documentation/homework/W2-homework.md\">\r\n            Homework question\r\n            <span className=\"sr-only\">(current)</span>\r\n          </a>\r\n          <a className=\"nav-item nav-link\" href=\" \">\r\n            repository\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n","import React from 'react'\r\n\r\nexport default props =>\r\n  <div className=\"card mb-3 shadow-sm\">\r\n    <div className=\"card-body\">\r\n      {props.children}\r\n    </div>\r\n  </div>","import React from 'react'\r\nimport Card from './Card'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport swal from 'sweetalert2'\r\n\r\nclass FormTodo extends React.Component {\r\n\r\n  state = {\r\n    textValue: \"\"\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault()\r\n    const description = this.state.textValue.trim()\r\n    if (description.length < 1) {\r\n      swal(\r\n        'Error!',\r\n        'Please enter a description!',\r\n        'error'\r\n      )\r\n      return\r\n    }\r\n    this.props.onSubmit({\r\n      id: Date.now(),\r\n      description,\r\n      done: false\r\n    })\r\n    this.setState({textValue: \"\"})\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      textValue: e.target.value\r\n    })\r\n  }\r\n\r\n  render = () =>\r\n    <Card>\r\n      <form onSubmit={this.submitHandler}>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-10 col-lg-11\">\r\n            <div className=\"form-group\">\r\n\r\n              <input\r\n                value={this.state.textValue}\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg mt-2\"\r\n                placeholder=\"Enter todo...\"/>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-2 col-lg-1\">\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"fab\"\r\n              color=\"primary\"\r\n              aria-label=\"Add\">\r\n              <AddIcon/>\r\n            </Button>\r\n\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n}\r\n\r\nexport default FormTodo","import React from 'react'\r\nimport DoneAll from \"@material-ui/icons/DoneAll\"\r\nimport OutlinedFlag from \"@material-ui/icons/OutlinedFlag\"\r\nimport Update from \"@material-ui/icons/Update\"\r\n\r\nexport default props =>\r\n  <div className=\"card mb-3 shadow\">\r\n    <div className={\"card-body text-center text-white \" + props.bg}>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          {\r\n            props.text === \"Total\"\r\n              ? <OutlinedFlag style={{fontSize: \"3em\"}}/>\r\n              : props.text === \"Done\"\r\n              ? <DoneAll style={{fontSize: \"3em\"}}/>\r\n              : props.text === \"Left\"\r\n                ? <Update style={{fontSize: \"3em\"}}/>\r\n                : \"\"\r\n          }\r\n\r\n\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {props.text} <br/>\r\n          <h1>{props.number}</h1>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </div>","import React from 'react'\r\nimport Statistic from \"./Statistic\"\r\n\r\nexport default props => {\r\n  const allTodos = props.todos.length\r\n  const doneTodos = props.todos.filter(todo => todo.done).length\r\n  const notDone = allTodos - doneTodos\r\n  return <div className=\"row mt-3\">\r\n    <div className=\"col-sm-4\">\r\n      <Statistic text=\"Total\" number={allTodos} bg=\"bg-danger\"/>\r\n    </div>\r\n    <div className=\"col-sm-4\">\r\n      <Statistic text=\"Done\" number={doneTodos} bg=\"bg-warning\"/>\r\n    </div>\r\n    <div className=\"col-sm-4\">\r\n      <Statistic text=\"Left\" number={notDone} bg=\"bg-success\"/>\r\n    </div>\r\n  </div>\r\n}","import React from 'react'\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\n\r\nclass ItemTodo extends React.Component {\r\n\r\n  render = () =>\r\n    <li\r\n      onClick={this.props.toggleDone}\r\n      className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\r\n      <div className=\"custom-control custom-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"custom-control-input\"\r\n          checked={this.props.done}\r\n          onChange={this.props.toggleDone}\r\n          id={this.props.id}/>\r\n        <label\r\n          className=\"custom-control-label\"\r\n          style={{textDecoration: this.props.done && \"line-through\"}}\r\n          htmlFor={this.props.id}>\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n\r\n      <IconButton\r\n        onClick={this.props.deleteTodo}\r\n        style={{color: \"#b0b0b0\"}}\r\n        aria-label=\"Delete\">\r\n        <DeleteIcon/>\r\n      </IconButton>\r\n    </li>\r\n}\r\n\r\nexport default ItemTodo","import React from 'react'\r\nimport ItemTodo from \"./ItemTodo\"\r\nimport Card from \"./Card\"\r\n\r\nexport default props =>\r\n  props.todos.length > 0\r\n    ? <ul className=\"list-group shadow-sm\">\r\n      {props.todos.map(todo =>\r\n        <ItemTodo\r\n          toggleDone={() => props.toggleDone(todo.id)}\r\n          deleteTodo={() => props.deleteTodo(todo.id)}\r\n          key={todo.id} id={todo.id} done={todo.done}>{todo.description}\r\n        </ItemTodo>\r\n      )}\r\n    </ul>\r\n    : <Card>No items found!</Card>","import React, {Component} from 'react'\nimport \"./css/App.scss\"\nimport NavBar from \"./components/NavBar\"\nimport FormTodo from \"./components/FormTodo\"\nimport Statistics from \"./components/Statistics\"\nimport ListTodos from \"./components/ListTodos\"\n\nclass App extends Component {\n  state = {\n    todos: [\n      {\"id\": 1, \"description\": \"Get out of bed\", \"done\": true},\n      {\"id\": 2, \"description\": \"Brush teeth\", \"done\": false},\n      {\"id\": 3, \"description\": \"Eat breakfast\", \"done\": false}\n    ]\n  }\n\n  addTodo = todo => {\n    this.setState(state =>\n      ({todos: [todo, ...state.todos]}))\n  }\n\n  toggleDone = id => {\n    this.setState(state => ({\n      todos: state.todos.map(todo =>\n        todo.id === id ? {...todo, done: !todo.done} : todo\n      )\n    }))\n  }\n\n  deleteTodo = id => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id)\n    }))\n  }\n\n  render = () =>\n    <>\n      <NavBar/>\n      <div className=\"container\">\n        <FormTodo onSubmit={this.addTodo}/>\n        <ListTodos toggleDone={this.toggleDone} deleteTodo={this.deleteTodo} todos={this.state.todos}/>\n        <Statistics todos={this.state.todos}/>\n      </div>\n    </>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n/*\n If you want your app to work offline and load faster, you can change\n unregister() to register() below. Note this comes with some pitfalls.\n Learn more about service workers: http://bit.ly/CRA-PWA\n */\nserviceWorker.unregister()\n"],"sourceRoot":""}